spring:
  application:
    name: Pokemon

  batch:
    job:
      enabled: false
    jdbc:
      table-prefix: batch.batch_

  jpa:
    hibernate:
      ddl-auto: update
    show-sql: true
    properties:
      hibernate:
        default_schema: pokemon
        dialect: org.hibernate.dialect.PostgreSQLDialect

  datasource:
    url: ${SPRING_DATASOURCE_URL}
    username: ${SPRING_DATASOURCE_USERNAME}
    password: ${SPRING_DATASOURCE_PASSWORD}
    driver-class-name: org.postgresql.Driver

  flyway:
    enabled: true
    baseline-on-migrate: true
    baseline-version: 0
    locations: classpath:db/migration
    schemas: pokemon

  security:
    oauth2:
      resourceserver:
        jwt:
          issuer-uri: ${KEYCLOAK_AUTH_SERVER_URL}/realms/${KEYCLOAK_REALM}

  boot:
    admin:
      client:
        url: http://admin-server:8090
        username: admin
        password: admin

  data:
    redis:
      host: redis
      port: 6379

  elasticsearch:
    uris: http://elasticsearch:9200
    username: elastic
    password: ${ELASTIC_PASSWORD}

logging:
  level:
    org.elasticsearch.client: DEBUG
    org:
      springframework:
        security: DEBUG
        security.oauth2: TRACE
        security.jwt: TRACE
    root: INFO

    net:
      ttddyy:
        dsproxy:
          listener: DEBUG

server:
  port:
    8082
  error:
    whitelabel:
      enabled: false
    path: /error

management:
  endpoints:
    web:
    exposure:
      include: '*'
  endpoint:
    health:
      show-details: always

filter:
  max-requests-per-minute: 60

components:
  securitySchemes:
    oAuth2AuthCode:
      type: oauth2
      flows:
        authorizationCode:
          authorizationUrl: ${KEYCLOAK_AUTH_SERVER_URL}/realms/${KEYCLOAK_REALM}/protocol/openid-connect/auth
          tokenUrl: ${KEYCLOAK_AUTH_SERVER_URL}/realms/${KEYCLOAK_REALM}/protocol/openid-connect/token

keycloak:
  auth-server-url: ${KEYCLOAK_AUTH_SERVER_URL}
  realm: ${KEYCLOAK_REALM}


elasticsearch:
  url: localhost:9200

